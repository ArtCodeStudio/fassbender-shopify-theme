{% comment %}
    Dynamic Variables, can be changed each new request
{% endcomment %}

<script>

  window.model = window.model || {};

  window.model.system = {};

  {% assign quote = '"' %}
  {% assign escapedQuote = '\"' %}

  /**
   * Covert adhesive keys like 
   *
   *  products_freeshipping_color: #1084f6 , like products_freeshipping_enabled: true
   *
   * to:
   * 
   *  products: {
   *    freeshipping: {
   *      color: #1084f6,
   *      enabled: true
   *    }
   *  }
   *
   * Used internally to convert the shopify theme settings to better usable javascript objects.
   */
  var adhesiveKeyObjectToNestedObject = function (adhesiveKeyObject, separator) {
    var nestedObject = {};
    if(!separator) {
      separator = '_';
    }
    for (var adhesiveKey in adhesiveKeyObject) {
      // skip loop if the property is from prototype
      if (!adhesiveKeyObject.hasOwnProperty(adhesiveKey)) {
        continue;
      }
      var object = adhesiveKeyObject[adhesiveKey];
      var keys = adhesiveKey.split(separator);
      var childObject;
      for (var i in keys) {
        var key = keys[i];       
        if(i <= 0) {
          // back to root object
          childObject = nestedObject;
        }

        // if there are more childs create tree element
        if( Number(i) < keys.length - 1) {
          if(typeof(childObject[key]) !== 'object') {
            childObject[key] = {};
          }
          childObject = childObject[key];
        } else {
          // on the end set the value
          childObject[key] = object;
        }
      }
    }
    return nestedObject;
  };

  /**
  * Variables 
  */

  /**
  * Theme Settings
  */
  window.model.system.themeSettings = adhesiveKeyObjectToNestedObject({{ settings | json }}, '_');

  /**
   * Cart
   * This is dynamic
   */
  // window.model.system.cart = window.cart || {{ cart | json }};

  /**
   * Urls
   */
  window.model.system.urls = window.urls || {};
  window.model.system.urls.noImageSrc = "{{ 'no-image.png' | asset_url }}";

  /**
   * Translations
   */
  window.model.system.translations = window.model.system.translations || {};

  window.model.system.translations.cart = {};
  window.model.system.translations.cart.general = {};
  window.model.system.translations.cart.general.add_to_cart = {{ 'cart.general.add_to_cart' | t | json }};
  window.model.system.translations.cart.general.pre_order = {{ 'cart.general.pre_order' | t | json }};
  window.model.system.translations.cart.general.empty = {{ 'cart.general.empty' | t | json }};
  window.model.system.translations.cart.general.savings_html = {{ 'cart.general.savings_html' | t: price: '[savings]' | json }};
  window.model.system.translations.cart.general.added = {{ 'cart.general.added' | t | json }};
  window.model.system.translations.cart.general.removed = {{ 'cart.general.removed' | t | json }};
  window.model.system.translations.cart.general.updated = {{ 'cart.general.updated' | t | json }};
  window.model.system.translations.cart.general.can_not_add_to_cart = {{ 'cart.general.can_not_add_to_cart' | t | json }};

  window.model.system.translations.product = {};
  window.model.system.translations.product.general = {};
  window.model.system.translations.product.general.sold_out = {{ 'product.general.sold_out' | t | json }};
  window.model.system.translations.product.general.available = {{ 'product.general.available' | t | json }};
  window.model.system.translations.product.general.backordner_possible = {{ 'product.general.backordner_possible' | t | json }};
  window.model.system.translations.product.general.unavailable = {{ 'product.general.unavailable' | t | json }};
  window.model.system.translations.product.general.legal_price_text = {{ 'product.general.legal_price_text' | t: vat_rate: '[vat_rate]' | json }};

  window.model.system.translations.wishlist = {};
  window.model.system.translations.wishlist.general = {};
  window.model.system.translations.wishlist.general.wishlist = {{ 'wishlist.general.wishlist' | t | json }};
  window.model.system.translations.wishlist.general.empty = {{ 'wishlist.general.empty' | t | json }};
  window.model.system.translations.wishlist.general.empty_message = {{ 'wishlist.general.empty_message' | t | json }};
  window.model.system.translations.wishlist.general.login_text = {{ 'wishlist.general.login_text' | t | json }};
  window.model.system.translations.wishlist.general.added = {{ 'wishlist.general.added' | t: title: '[title]' | json }};
  window.model.system.translations.wishlist.general.removed = {{ 'wishlist.general.removed' | t: title: '[title]' | json }};
  window.model.system.translations.wishlist.general.clear = {{ 'wishlist.general.clear' | t | json }};
  window.model.system.translations.wishlist.general.emptied = {{ 'wishlist.general.emptied' | t | json }};
  window.model.system.translations.wishlist.general.remove = {{ 'wishlist.general.remove' | t | json }};
  window.model.system.translations.wishlist.general.add = {{ 'wishlist.general.add' | t | json }};
  window.model.system.translations.wishlist.general.show = {{ 'wishlist.general.show' | t | json }};
  window.model.system.translations.wishlist.general.continue = {{ 'wishlist.general.continue' | t | json }};

  window.model.system.customer = {% include 'jumplink-utils-json-customer' %}; // {{ customer | json }} not allowed for this object
  
  window.model.system.linklists = {% include 'jumplink-utils-json-linklists' %}; // {{ linklists | json }} not allowed for this object

  /**
  * Money / Currency
  * Detect if amount is rendered with comma or dot separator
  * @see https://help.shopify.com/themes/liquid/filters/money-filters
  * @see https://help.shopify.com/manual/payment-settings/currency-formatting
  */
  window.model.system.setShopifyCurrencyFormatter = function (moneyString) {

    if(moneyString.indexOf('1,134.65') > -1) {
      return moneyString.replace('1,134.65', '{% raw %}{{ amount }}{% endraw %}');
    }
    
    if(moneyString.indexOf('1.134,65') > -1) {
      return moneyString.replace('1.134,65', '{% raw %}{{ amount_with_comma_separator }}{% endraw %}');
    }
    
    if(moneyString.indexOf('1,135') > -1) {
      return moneyString.replace('1,135', '{% raw %}{{ amount_no_decimals }}{% endraw %}');
    }
    
    if(moneyString.indexOf('1.135') > -1) {
      return moneyString.replace('1.135', '{% raw %}{{ amount_no_decimals_with_comma_separator }}{% endraw %}');
    }
    
    if(moneyString.indexOf('1 135') > -1) {
      return moneyString.replace('1 135', '{% raw %}{{ amount_no_decimals_with_space_separator }}{% endraw %}');
    }
    
    console.warn("No currency formatter found, set to default!", moneyString);
    return '{% raw %}{{ amount }} EUR{% endraw %}';
  }

  {% if settings.money_with_currency %}
    var moneyString = '{{ 113465 | money_with_currency }}';
  {% else %}
    var moneyString = '{{ 113465 | money }}';
  {% endif %}


  /**
  * shop settings
  */
  window.model.system.shopSettings = window.model.system.shopSettings || {};
  
  window.model.system.shopSettings.money_with_currency_format = {{ shop.money_with_currency_format | json }};
  window.model.system.shopSettings.money_format = window.model.system.setShopifyCurrencyFormatter(moneyString);
  window.model.system.shopSettings.moneyFormat = window.model.system.shopSettings.money_format;
  window.model.system.shopSettings.moneyWithCurrencyFormat = window.model.system.shopSettings.money_with_currency_format;

  window.model.system.shopSettings.collections_count = {{ shop.collections_count | json }};
  window.model.system.shopSettings.currency = {{ shop.currency | json }};
  window.model.system.shopSettings.description = {{ shop.description | json }};
  window.model.system.shopSettings.domain = '{{ shop.domain }}';
  window.model.system.shopSettings.email = {{ shop.email | json }};
  window.model.system.shopSettings.enabled_payment_types = {{ shop.enabled_payment_types | json }};
  window.model.system.shopSettings.metafields = {{ shop.metafields | json }};
  window.model.system.shopSettings.name = {{ shop.name | json }};
  window.model.system.shopSettings.permanent_domain = {{ shop.permanent_domain | json }};
  window.model.system.shopSettings.products_count = {{ shop.products_count | json }};
  window.model.system.shopSettings.types = {{ shop.types | json }};
  window.model.system.shopSettings.url = {{ shop.url | json }};
  window.model.system.shopSettings.secure_url = {{ shop.secure_url | json }};
  window.model.system.shopSettings.vendors = {{ shop.vendors | json }};
  window.model.system.shopSettings.locale = {{ shop.locale | json }};

  /**
   * Templates
   */
  window.model.system.templates = window.model.system.templates || {}

  {% capture jumplinkTpl %}{% include 'jumplink-tpl-instafeed-item' %}{% endcapture %}
  window.model.system.templates.instafeedItem = "{{ jumplinkTpl | strip_newlines | strip | replace: quote, escapedQuote }}";

  {% capture jumplinkTpl %}{% include 'jumplink-tpl-slideout' %}{% endcapture %}
  window.model.system.templates.slideout = "{{ jumplinkTpl | strip_newlines | strip | replace: quote, escapedQuote }}";

  {% capture jumplinkTpl %}{% include 'jumplink-tpl-nav-items' %}{% endcapture %}
  window.model.system.templates.navItems = "{{ jumplinkTpl | strip_newlines | strip | replace: quote, escapedQuote }}";

</script>