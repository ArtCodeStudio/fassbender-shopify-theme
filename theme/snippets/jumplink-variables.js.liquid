{% comment %}
    Dynamic Variables, can be changed each new request
{% endcomment %}

<script>

  {% assign quote = '"' %}
  {% assign escapedQuote = '\"' %}

  /**
  * Variables 
  */

  /**
  * Theme Settings
  */
  window.settings = {{ settings | json }};

  /**
  * Navigation
  */
  window.settings.linklists = {};

  /**
  * General
  */
  window.general = {};


  /**
   * Cart
   */
  window.cart = {{ cart | json }};

  /**
   * Product
   */
  window.product = {};
  window.product.noImageSrc = "{{ 'no-image.png' | asset_url }}";

  /**
   * Translations
   */
  window.translations = {};

  window.translations.cart = {};
  window.translations.cart.general = {};
  window.translations.cart.general.add_to_cart = {{ 'cart.general.add_to_cart' | t | json }};
  window.translations.cart.general.pre_order = {{ 'cart.general.pre_order' | t | json }};
  window.translations.cart.general.empty = {{ 'cart.general.empty' | t | json }};
  window.translations.cart.general.savings_html = {{ 'cart.general.savings_html' | t: price: '[savings]' | json }};
  window.translations.cart.general.added = {{ 'cart.general.added' | t | json }};
  window.translations.cart.general.removed = {{ 'cart.general.removed' | t | json }};
  window.translations.cart.general.updated = {{ 'cart.general.updated' | t | json }};
  window.translations.cart.general.can_not_add_to_cart = {{ 'cart.general.can_not_add_to_cart' | t | json }};

  window.translations.product = {};
  window.translations.product.general = {};
  window.translations.product.general.sold_out = {{ 'product.general.sold_out' | t | json }};
  window.translations.product.general.available = {{ 'product.general.available' | t | json }};
  window.translations.product.general.backordner_possible = {{ 'product.general.backordner_possible' | t | json }};
  window.translations.product.general.unavailable = {{ 'product.general.unavailable' | t | json }};
  window.translations.product.general.legal_price_text = {{ 'product.general.legal_price_text' | t: vat_rate: '[vat_rate]' | json }};

  window.translations.wishlist = {};
  window.translations.wishlist.general = {};
  window.translations.wishlist.general.wishlist = {{ 'wishlist.general.wishlist' | t | json }};
  window.translations.wishlist.general.empty = {{ 'wishlist.general.empty' | t | json }};
  window.translations.wishlist.general.empty_message = {{ 'wishlist.general.empty_message' | t | json }};
  window.translations.wishlist.general.login_text = {{ 'wishlist.general.login_text' | t | json }};
  window.translations.wishlist.general.added = {{ 'wishlist.general.added' | t: title: '[title]' | json }};
  window.translations.wishlist.general.removed = {{ 'wishlist.general.removed' | t: title: '[title]' | json }};
  window.translations.wishlist.general.clear = {{ 'wishlist.general.clear' | t | json }};
  window.translations.wishlist.general.emptied = {{ 'wishlist.general.emptied' | t | json }};
  window.translations.wishlist.general.remove = {{ 'wishlist.general.remove' | t | json }};
  window.translations.wishlist.general.add = {{ 'wishlist.general.add' | t | json }};
  window.translations.wishlist.general.show = {{ 'wishlist.general.show' | t | json }};
  window.translations.wishlist.general.continue = {{ 'wishlist.general.continue' | t | json }};

  //  TODO use json filter?
  window.customer = {% include 'jumplink-customer.json' %}; // {{ customer | json }} not allowed for this object
  window.settings.linklists = {% include 'jumplink-linklists.json' %}; // {{ linklists | json }} not allowed for this object

  /**
  * Money / Currency
  * Detect if amount is rendered with comma or dot separator
  * @see https://help.shopify.com/themes/liquid/filters/money-filters
  * @see https://help.shopify.com/manual/payment-settings/currency-formatting
  */
  var setShopifyCurrencyFormatter = function (moneyString) {

    if(moneyString.indexOf('1,134.65') > -1) {
      return moneyString.replace('1,134.65', '{% raw %}{{ amount }}{% endraw %}');
    }
    
    if(moneyString.indexOf('1.134,65') > -1) {
      return moneyString.replace('1.134,65', '{% raw %}{{ amount_with_comma_separator }}{% endraw %}');
    }
    
    if(moneyString.indexOf('1,135') > -1) {
      return moneyString.replace('1,135', '{% raw %}{{ amount_no_decimals }}{% endraw %}');
    }
    
    if(moneyString.indexOf('1.135') > -1) {
      return moneyString.replace('1.135', '{% raw %}{{ amount_no_decimals_with_comma_separator }}{% endraw %}');
    }
    
    if(moneyString.indexOf('1 135') > -1) {
      return moneyString.replace('1 135', '{% raw %}{{ amount_no_decimals_with_space_separator }}{% endraw %}');
    }
    
    console.warn("No currency formatter found, set to default!", moneyString);
    return '{% raw %}{{ amount }} EUR{% endraw %}';
  }

  {% if settings.money_with_currency %}
    var moneyString = '{{ 113465 | money_with_currency }}';
  {% else %}
    var moneyString = '{{ 113465 | money }}';
  {% endif %}

  window['shop'] = {
    money_with_currency_format: {{ shop.money_with_currency_format | json }},
  };

  window.shop.money_format = setShopifyCurrencyFormatter(moneyString);
  window.shop.moneyFormat = window.shop.money_format;
  window.shop.moneyWithCurrencyFormat = window.shop.money_with_currency_format;

  // console.log('money_format: "'+window.shop.money_format+'"', 'shop.money_format: "{{ shop.money_format }}"', 'moneyWithCurrencyFormat: "'+window.shop.moneyWithCurrencyFormat+'"' );

  /**
  * Shop
  */
  window['shop'].collections_count = {{ shop.collections_count | json }};
  window['shop'].currency = {{ shop.currency | json }};
  window['shop'].description = {{ shop.description | json }};
  window['shop'].domain = '{{ shop.domain }}';
  window['shop'].email = {{ shop.email | json }};
  window['shop'].enabled_payment_types = {{ shop.enabled_payment_types | json }};
  window['shop'].metafields = {{ shop.metafields | json }};
  window['shop'].money_with_currency_format = {{ shop.money_with_currency_format | json }};
  window['shop'].name = {{ shop.name | json }};
  window['shop'].permanent_domain = {{ shop.permanent_domain | json }};
  window['shop'].products_count = {{ shop.products_count | json }};
  window['shop'].types = {{ shop.types | json }};
  window['shop'].url = {{ shop.url | json }};
  window['shop'].secure_url = {{ shop.secure_url | json }};
  window['shop'].vendors = {{ shop.vendors | json }};
  window['shop'].locale = {{ shop.locale | json }};


  /**
  * Store Pick Up App
  */
  window.StorePickUpApp = {};
  window.StorePickUpApp.script = {{ 'storepickup.js' | asset_url | json }};

  /**
  * Loyalty Points by Bold
  * @see https://apps.shopify.com/loyalty-points-by-bold
  * @see /snippets/bold-loyalties-callout-assets.liquid
  */
  window.BoldApps = {};
  BoldApps.Loyalties = {};

  BoldApps.Loyalties.shop = {
    domain:'{{ shop.domain}}',
    permanent_domain: '{{ shop.permanent_domain }}',
    url: '{{shop.url}}',
    metafields: {{ shop.metafields.bold_loyalties | json }}
  };

  BoldApps.Loyalties.CalloutSettings = {
    fade_out_after: '{{ shop.metafields.bold_loyalties.callout_fade_out_after }}'
  };

  BoldApps.Loyalties.ProductDisplaySettings = {
    title:{
      show:true
    },
    body:{
      'text' : '{{ shop.metafields.bold_loyalties.product_earn_callout_text }}'
    },
    redeem:{
      'buttonText' : '{{ shop.metafields.bold_loyalties.product_redeem_button_text }}'
    }
  };

  BoldApps.Loyalties.customer = null;
  {% if shop.customer_accounts_enabled %}
    {% if customer %}
      BoldApps.Loyalties.customer ={
          email:'{{ customer.email}}',
          id: {{ customer.id}},
          uuid: '{{ customer.metafields.bold_loyalties.uuid }}'
      } ;
      BoldApps.Loyalties.customer.metafields = {{ customer.metafields.bold_loyalties | json }}
    {% endif %}
  {% endif %}

  /**
   * Templates
   */

  if(typeof ProductJS !== 'object') {
      var ProductJS = {};
  }
  if(typeof ProductJS.templates !== 'object') {
      ProductJS.templates = {};
  }

  {% capture tplJumplinkInstafeedItem %}{% include 'tpl-jumplink-instafeed-item' %}{% endcapture %}
  ProductJS.templates.instafeedItem  = "{{ tplJumplinkInstafeedItem | strip_newlines | replace: quote, escapedQuote }}";

  {% capture tplJumplinkProduct %}{% include 'tpl-jumplink-product' %}{% endcapture %}
  window.ProductJS.templates.product = "{{ tplJumplinkProduct | strip_newlines | replace: quote, escapedQuote }}";

  {% capture tplJumplinkProductImagesSlick %}{% include 'tpl-jumplink-product-images-slick' %}{% endcapture %}
  window.ProductJS.templates.productImagesSlick = "{{ tplJumplinkProductImagesSlick | strip_newlines | replace: quote, escapedQuote }}";

  {% capture tplJumplinkProductVariantDropdowns %}{% include 'tpl-jumplink-product-variant-dropdowns' %}{% endcapture %}
  window.ProductJS.templates.productVariantDropdowns = "{{ tplJumplinkProductVariantDropdowns | strip_newlines | replace: quote, escapedQuote }}";

  {% capture tplJumplinkProductQuantityButton %}{% include 'tpl-jumplink-product-quantity-button' %}{% endcapture %}
  window.ProductJS.templates.productQuantityButton = "{{ tplJumplinkProductQuantityButton | strip_newlines | replace: quote, escapedQuote }}";

  {% capture tplJumplinkProductB2bList %}{% include 'tpl-jumplink-product-b2b-list' %}{% endcapture %}
  window.ProductJS.templates.productB2bList = "{{ tplJumplinkProductB2bList | strip_newlines | replace: quote, escapedQuote }}";

  {% capture tplJumplinkProductB2bButton %}{% include 'tpl-jumplink-product-b2b-button' %}{% endcapture %}
  window.ProductJS.templates.productB2bButton = "{{ tplJumplinkProductB2bButton | strip_newlines | replace: quote, escapedQuote }}";

  {% capture tplJumplinkProductB2bAdd %}{% include 'tpl-jumplink-product-b2b-add' %}{% endcapture %}
  window.ProductJS.templates.productB2bAdd = "{{ tplJumplinkProductB2bAdd | strip_newlines | replace: quote, escapedQuote }}";

  {% capture tplJumplinkProductPhotoModal %}{% include 'tpl-jumplink-product-photo-modal' %}{% endcapture %}
  window.ProductJS.templates.productPhotoModal = "{{ tplJumplinkProductPhotoModal | strip_newlines | replace: quote, escapedQuote }}";

</script>